library(tidyverse) # обработка данных, графики...
library(vcd) # мозаичные графики для качественных переменных
library(skimr) # описательные статистики
library(rio) # импорт фантастического количества форматов данных
library(ggalluvial) # потоковые ???? графики для качественных переменных
library(nycflights13) # набор данных о вылетах из Нью-Йорка
library(corrplot) # визуализация корреляций
library(reshape2) # длинные и широкие таблицы
install.packages("feather")
library(tidyverse) # обработка данных, графики...
library(vcd) # мозаичные графики для качественных переменных
library(skimr) # описательные статистики
library(rio) # импорт фантастического количества форматов данных
library(ggalluvial) # потоковые ???? графики для качественных переменных
library(nycflights13) # набор данных о вылетах из Нью-Йорка
library(corrplot) # визуализация корреляций
library(reshape2) # длинные и широкие таблицы
table(diamonds$color)
levels(diamonds$color)
diamonds2 <- mutate(diamonds, color = fct_collapse(color, United = c('D', 'E', 'F')))
table(diamonds2$color)
diamonds3 <- mutate(diamonds, cut = fct_collapse(`Premium`, `Ideal`))
table(diamonds3$cut)
diamonds2 <- mutate(diamonds, color = fct_collapse(color, United = c('D', 'E', 'F')))
table(diamonds2$color)
diamonds3 <- mutate(diamonds, cut = fct_collapse(cut, best=c(`Premium`, `Ideal`)))
table(diamonds3$cut)
diamonds3 <- mutate(diamonds,
cut = fct_collapse(cut, best=c(`Premium`,`Ideal`)))
table(diamonds3$cut)
diamonds3 <- mutate(diamonds,
cut = fct_collapse(cut, best=c(`Premium`,`Ideal`)))
table(diamonds3$cut)
table(diamonds$color)
levels(diamonds$color)
diamonds2 <- mutate(diamonds, color = fct_collapse(color, United = c('D', 'E', 'F')))
table(diamonds2$color)
diamonds3 <- mutate(diamonds,
cut = fct_collapse(cut, Best=c(`Premium`,`Ideal`)))
table(diamonds3$cut)
diamonds3 <- mutate(diamonds,
cut = fct_collapse(cut, Best=c('Premium', "Ideal")))
table(diamonds3$cut)
diamonds2 <- mutate(diamonds, color = fct_collapse(color, United = c('D', 'E', 'F')))
table(diamonds2$color)
diamonds3 <- mutate(diamonds,
cut = fct_collapse(cut, Best = c('Premium', "Ideal")))
table(diamonds3$cut)
library(tidyverse) # обработка данных, графики...
library(skimr) # описательные статистики
library(rio) # импорт фантастического количества форматов данных
library(broom) # метла превращает результаты оценивания моделей в таблички
library(GGally) # больше готовых графиков
library(sjPlot) # ещё больше графиков
library(lmtest) # диагностика линейных моделей
library(Ecdat) # много-много разных наборов данных
library(sjstats) # удобные мелкие функции для работы с моделями
library(sandwich) # оценка Var для гетероскедастичности
library(AER) # работа с инструментальными переменными
install.packages("MASS")
install.packages("car")
library(tidyverse) # обработка данных, графики...
library(skimr) # описательные статистики
library(rio) # импорт фантастического количества форматов данных
library(broom) # метла превращает результаты оценивания моделей в таблички
library(GGally) # больше готовых графиков
library(sjPlot) # ещё больше графиков
library(lmtest) # диагностика линейных моделей
library(Ecdat) # много-много разных наборов данных
library(sjstats) # удобные мелкие функции для работы с моделями
library(sandwich) # оценка Var для гетероскедастичности
library(AER) # работа с инструментальными переменными
install.packages("rlang")
install.packages("data.table")
library(tidyverse) # обработка данных, графики...
library(skimr) # описательные статистики
library(rio) # импорт фантастического количества форматов данных
library(broom) # метла превращает результаты оценивания моделей в таблички
library(GGally) # больше готовых графиков
library(sjPlot) # ещё больше графиков
library(lmtest) # диагностика линейных моделей
library(Ecdat) # много-много разных наборов данных
library(sjstats) # удобные мелкие функции для работы с моделями
library(sandwich) # оценка Var для гетероскедастичности
library(AER) # работа с инструментальными переменными
install.packages(c("stringi", "openxlsx"))
library(tidyverse) # обработка данных, графики...
library(skimr) # описательные статистики
library(rio) # импорт фантастического количества форматов данных
library(broom) # метла превращает результаты оценивания моделей в таблички
library(GGally) # больше готовых графиков
library(sjPlot) # ещё больше графиков
library(lmtest) # диагностика линейных моделей
library(Ecdat) # много-много разных наборов данных
library(sjstats) # удобные мелкие функции для работы с моделями
library(sandwich) # оценка Var для гетероскедастичности
library(AER) # работа с инструментальными переменными
install.packages("mvtnorm")
library(tidyverse) # обработка данных, графики...
library(skimr) # описательные статистики
library(rio) # импорт фантастического количества форматов данных
library(broom) # метла превращает результаты оценивания моделей в таблички
library(GGally) # больше готовых графиков
library(sjPlot) # ещё больше графиков
library(lmtest) # диагностика линейных моделей
library(Ecdat) # много-много разных наборов данных
library(sjstats) # удобные мелкие функции для работы с моделями
library(sandwich) # оценка Var для гетероскедастичности
library(AER) # работа с инструментальными переменными
setwd("D:/R_teaching/r_course")
pulse <- import('data/pulse.txt')
pulse_fct <- pulse %>%
mutate_at(vars(-Weight, -Height, -Age, -Pulse1, -Pulse2), factor)
model_ur <- lm(data = pulse_fct, Pulse2 ~ Weight + Pulse1 + Ran + Smokes)
plot_model(model_ur, type="std", ci.lvl = 0.9)
